#include <SFML/Graphics.hpp>

// Custom colours
sf::Color Twilight = sf::Color::Color(0, 0, 0);
sf::Color Murky = sf::Color::Color(15, 28, 30);
sf::Color Deep = sf::Color::Color(48, 49, 96);
sf::Color Jelly = sf::Color::Color(139, 86, 120);
sf::Color Coral = sf::Color::Color(156, 118, 132);
sf::Color Foam = sf::Color::Color(170, 170, 170);
sf::Color Bubble = sf::Color::Color(255, 255, 255);

int main()
{
    // INITIALIZE

    sf::ContextSettings settings;
    sf::RenderWindow window(sf::VideoMode(800, 600), "Unfathomable", sf::Style::Default, settings); // RenderWindow class, window object, with arguments for the constructor (mode(x, y), name)


    sf::CircleShape shape(50.0f);
    shape.setFillColor(Coral);
    shape.setPosition(sf::Vector2f(100.0f, 100.0f));

    sf::RectangleShape shape2(sf::Vector2f(50.0f, 80.0f));
    shape2.setFillColor(Foam);
    shape2.setOrigin(shape2.getSize() / 2.0f); // Divide both components of the origin by 2
    shape2.setPosition(sf::Vector2f(100.0f, 100.0f));

    sf::RectangleShape shape3(sf::Vector2f(4.0f, 80.0f));
    shape3.setFillColor(Bubble);
    shape3.setOrigin(shape3.getSize() / 2.0f); // Divide both components of the origin by 2
    shape3.setPosition(sf::Vector2f(100.0f, 100.0f));
    shape3.setRotation(45);

    sf::CircleShape triangle(50.0f, 3);
    triangle.setFillColor(Jelly);
    triangle.setPosition(sf::Vector2f(150.0f, 100.0f));

    sf::CircleShape hex(50.0f, 6);
    hex.setFillColor(Coral);
    hex.setPosition(sf::Vector2f(300.0f, 100.0f));

    // Keep window open with a while loop
    // main game loop
    while(window.isOpen())
    {
        // UPDATE
        
        // Event loop for the window
        // Save current event polled in a variable called event
        sf::Event event;
        while(window.pollEvent(event))
        {
            switch(event.type)
            {
                case sf::Event::Closed:
                    window.close();
                    break;
            }
        }


        // DRAW

        window.clear(Murky); // Clear the window and fill it solid
        window.draw(shape);
        window.draw(shape2);
        window.draw(shape3);
        window.draw(triangle);
        window.draw(hex);
        window.display(); // Swap backbuffer with frontbuffer (screen)
    }

    return 0;
}